buildscript {
    repositories {
        jcenter()
        maven {
            name = 'Forge'
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'Sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = 'Jitpack.io'
            url = 'https://jitpack.io'
        }
        maven {
            name = 'Maven'
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

repositories {
    maven {
        name = "Sponge"
        url = "https://repo.spongepowered.org/maven/"
    }
    maven {
        name = 'bStats'
        url = 'https://repo.bstats.org/content/repositories/releases/'
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven"
    }
}

boolean isFat = hasProperty("isFat")
boolean isClient = hasProperty("isClient")
boolean isObfuscated = project.gradle.startParameter.taskNames.contains("build")
String buildType = (isFat ? "FAT" : "THIN")

version = "1.12.2-GAMMA-1.2.0"
group = "cf.terminator"
archivesBaseName = "Tiquality-"+ (isObfuscated ? "" : "DEOBF-") + buildType
println("Compiling: " + archivesBaseName + "-" + version)

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"


    options.fork = true
    options.forkOptions.executable = 'javac'
    options.compilerArgs << "-XDignore.symbol.file"
}


minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "snapshot_20180808"
    replaceIn "Tiquality.java"
    replace '${version}', buildType + "-" + project.version
}

configurations {
    embed
    compile.extendsFrom(embed)
    compileOnly.transitive = false
}

dependencies {
    /*
        Sponge
     */
    compileOnly 'org.spongepowered:spongeforge:1.12.2-2768-7.1.6-RC3643:dev'

    /*
        GriefPrevention
        Run configuration requires: -Dbstats.relocatecheck="false" in VM options.
        Caused by module: bstats-sponge
     */
    compileOnly 'me.ryanhamshire:griefprevention:1.12.2-4.3.0.654:original'

    /*
        FTB Utilities
     */
    compileOnly 'ftb-utilities:FTBUtilities:5.3.0.52'

    /*
        FTB Library
     */
    compileOnly 'ftblib:FTBLib:5.3.0.56'

    if(isFat) {
        embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
            ['gson','guava','commons-io'].each {
                exclude module: it
            }
            exclude module: 'launchwrapper'
        }
    }else{
        compileOnly ('org.spongepowered:mixin:0.7.11-SNAPSHOT'){
            ['gson','guava','commons-io'].each {
                exclude module: it
            }
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", buildType + "-" + project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'mixins.tiquality.json'
        expand 'version':buildType + "-" + project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info or mixins.tiquality.json
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'mixins.tiquality.json'
    }

}

sourceSets.main.refMap = "mixins.tiquality.refmap.json"

jar {
    from (configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }){
        /* Embedded mixin */
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        rename 'LICENSE.txt', 'LICENSE-mixin.txt'
    }

    from ('LICENSE')
    manifest.attributes(
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true',
            'MixinConfigs': 'mixins.tiquality.json',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            //'TweakClass': 'cf.terminator.tiquality.mixinhelper.MixinConfigPlugin',
            'TweakOrder': '0',

    )
}

/* Convienience script to quickly install Tiquality in an obfuscated environment. */

build.doLast {
    if(isClient) {
        delete fileTree('run_client/mods') {
            include 'Tiquality*'
        }
        copy {
            from jar.archivePath
            into "run_client/mods"
        }
        println("Replaced Tiquality in 'run_client/mods'")
    }else{
        delete fileTree('run_server/mods') {
            include 'Tiquality*'
        }
        copy {
            from jar.archivePath
            into "run_server/mods"
        }
        println("Replaced Tiquality in 'run_server/mods'")
    }
}